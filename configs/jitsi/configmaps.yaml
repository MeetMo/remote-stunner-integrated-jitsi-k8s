apiVersion: v1
kind: ConfigMap
metadata:
  name: prosody-common
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
data:
  ENABLE_AUTH: "0"
  ENABLE_GUESTS: "1"
  # This is just for testing purpose to enforce JVB/STUNner usage.
  # In production is recommended to turn this on.
  ENABLE_P2P: "0"
  # This shall be the domain what is pointing to your Ingress Gateway.
  PUBLIC_URL: "https://jitsi-svc.kubes.meetmo.io" # TODO: Change this
  # Enable TURN
  TURN_ENABLE: "true"
  # This shall be the domain what is pointing to your STUNner Gateway.
  TURNS_HOST: "stunner-svc.kubes.meetmo.io" # TODO: Change this
  # Define the TURN port
  TURNS_PORT: "443"
  # This shall be the same secret what is configured in STUNner gateway.
  TURN_CREDENTIALS: "my-shared-secret"
  JICOFO_AUTH_USER: "focus"
  # These are for internal communication. Change the domains for the one what
  # is pointing to your Ingress Gateway.
  XMPP_DOMAIN: jitsi-svc.kubes.meetmo.io
  XMPP_MUC_DOMAIN: muc.jitsi-svc.kubes.meetmo.io
  XMPP_AUTH_DOMAIN: auth.jitsi-svc.kubes.meetmo.io
  XMPP_GUEST_DOMAIN: guest.jitsi-svc.kubes.meetmo.io
  XMPP_RECORDER_DOMAIN: recorder.jitsi-svc.kubes.meetmo.io
  XMPP_INTERNAL_MUC_DOMAIN: internal-muc.jitsi-svc.kubes.meetmo.io
  ENABLE_XMPP_WEBSOCKET: "1"
  ENABLE_COLIBRI_WEBSOCKET: "1"
  XMPP_MUC_MODULES: "external_services"
  TZ: 'UTC'
  LOG_LEVEL: 'info'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jitsi-meet
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: web
data:
  DISABLE_HTTPS: "1"
  JICOFO_AUTH_USER: 'focus'
  # If you put your Jitsi deployment in a different namespace than the default,
  # then change that part.
  XMPP_BOSH_URL_BASE: 'http://jitsi-prosody.default.svc.cluster.local:5280'
  # Whit the command below you can retrieve your cluster's public IP address
  # kubectl get svc kube-dns -n kube-system -o jsonpath='{.spec.clusterIP}'
  # Change this accordingly
  NGINX_RESOLVER: '10.245.0.10' # TODO: Change this
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jitsi-meet-config
  labels:
    app.kubernetes.io/name: jitsi-meet-config
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: web
data:
  # Here you can configure your web service.
  # custom-config.js: |
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jitsi-jvb
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: jvb
data:
  JVB_BREWERY_MUC: 'jvbbrewery'
  JVB_PORT: '10000'
  # This the official jitsi STUN server. You can use anything else.
  JVB_STUN_SERVERS: 'meet-jit-si-turnrelay.jitsi.net:443'
  JVB_TCP_HARVESTER_DISABLED: '1'
  # Change default if your prosody deployment is in another namespace than default
  XMPP_SERVER: 'jitsi-prosody.default.svc.cluster.local'
  COLIBRI_REST_ENABLED: 'true'
  ENABLE_COLIBRI_WEBSOCKET: 'false'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jitsi-jicofo
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: jicofo
data:
  JVB_BREWERY_MUC: 'jvbbrewery'
  # Change default if your prosody deployment is in another namespace than default
  XMPP_SERVER: 'jitsi-prosody.default.svc.cluster.local'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jitsi-prosody
  labels:
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: jitsi
data:
