# Jitsi web
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jitsi-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: jitsi
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: jitsi
        app.kubernetes.io/component: web
    spec:
      containers:
        - name: jitsi-meet
          image: "jitsi/web:stable"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /config/custom-config.js
              subPath: custom-config.js
          envFrom:
          - configMapRef:
              name: jitsi-meet
          - configMapRef:
              name: prosody-common
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
      volumes:
        - name: config-volume
          configMap:
            name: jitsi-meet-config
---
apiVersion: v1
kind: Service
metadata:
  name: jitsi-meet
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: web
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: web
---

# Prosody
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jitsi-prosody
  labels:
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: jitsi
spec:
  serviceName: "prosody"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prosody
      app.kubernetes.io/instance: jitsi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prosody
        app.kubernetes.io/instance: jitsi
    spec:
      containers:
        - name: prosody
          image: "jitsi/prosody:stable"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: jitsi-prosody
          - secretRef:
              name: jitsi-prosody
          - secretRef:
              name: 'prosody-jicofo'
          - secretRef:
              name: 'prosody-jvb'
          - configMapRef:
              name: 'prosody-common'
          ports:
            - name: xmpp-c2s
              containerPort: 5222
              protocol: TCP
            - name: xmpp-s2s
              containerPort: 5269
              protocol: TCP
            - name: xmpp-component
              containerPort: 5347
              protocol: TCP
            - name: bosh-insecure
              containerPort: 5280
              protocol: TCP
            - name: bosh-secure
              containerPort: 5281
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /http-bind
              port: bosh-insecure
          readinessProbe:
            httpGet:
              path: /http-bind
              port: bosh-insecure
          volumeMounts:
          - name: prosody-data
            mountPath: /config/data
      volumes:
      - name: prosody-data
        persistentVolumeClaim:
          claimName: prosody-data
  volumeClaimTemplates:
  - metadata:
      name: prosody-data
    spec:
      accessModes:
        - ReadWriteOnce
      volumeMode: Filesystem
      resources:
        requests:
          storage: 3G
---
apiVersion: v1
kind: Service
metadata:
  name: jitsi-prosody
  labels:
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: jitsi
spec:
  clusterIP: None
  ports:
    - port: 5280
      protocol: TCP
      name: tcp-bosh-insecure
    - port: 5281
      protocol: TCP
      name: tcp-bosh-secure
    - port: 5347
      protocol: TCP
      name: tcp-xmpp-component
    - port: 5222
      protocol: TCP
      name: tcp-xmpp-c2
    - port: 5269
      protocol: TCP
      name: tcp-xmpp-s2
  selector:
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: jitsi
---

# Jicofo
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jitsi-jicofo
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: jicofo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: jitsi
      app.kubernetes.io/component: jicofo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: jitsi
        app.kubernetes.io/component: jicofo
    spec:
      containers:
        - name: jitsi-meet
          image: "jitsi/jicofo:stable"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: prosody-jicofo
          - configMapRef:
              name: prosody-common
          - configMapRef:
              name: jitsi-jicofo
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8888
          readinessProbe:
            tcpSocket:
              port: 8888
---

# JVB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jitsi-jvb
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: jvb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: jitsi
      app.kubernetes.io/component: jvb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: jitsi
        app.kubernetes.io/component: jvb
    spec:
      containers:
        - name: jitsi-meet
          image: "jitsi/jvb:stable"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: prosody-jvb
          - configMapRef:
              name: prosody-common
          - configMapRef:
              name: jitsi-jvb
          env:
          ports:
            - name: rtp-udp
              containerPort: 10000
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /about/health
              port: 8080
          readinessProbe:
            httpGet:
              path: /about/health
              port: 8080
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jitsi-jvb
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 10000
      protocol: UDP
      name: rtp-udp
      targetPort: 10000
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: jitsi
    app.kubernetes.io/component: jvb
